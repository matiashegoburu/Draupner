@@model IQueryable<@(Model.CoreNamespace).Domain.Model.@(Model.Entity.Name)>
@@{
    ViewBag.Title = "@(Model.Entity.Name)";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@@section JavaScript
{
   <script type="text/javascript" src="@@Url.Content("/Scripts/crud.js")"></script>
}

<div id="dialog" title="Confirm Delete">
  Are you sure you want to delete this?
</div>

<h2>@(Model.Entity.Name)s</h2>
@@Html.ActionLink("Create New", "Create")

@@Html.Grid(Model).Columns( c =>
                                     {
                                         c.Add(item => item.Id).Encoded(false).Sanitized(false).RenderValueAs(item => Html.ActionLink(item.Id.ToString(), "Details", new {id = item.Id})).Titled("Id").Sortable(true).Filterable(true);
@foreach(var property in Model.Entity.BasicProperties) {
if(property.Name != "Id") {
@:    c.Add(item => item.@(property.Name)).Titled("@(property.Name)").Sortable(true).Filterable(true);
}
}
                                         c.Add().Encoded(false).Sanitized(false).RenderValueAs(item => Html.ActionLink(" Edit ", "Edit", new { Id = item.Id }).ToHtmlString());
                                         c.Add().Encoded(false).Sanitized(false).RenderValueAs(item => Html.ActionLink(" Delete ", "Delete", new { Id = item.Id }, new { @@class = "confirmDelete" }));
                                         
                                     }).WithMultipleFilters().WithPaging(10)